C51 COMPILER V9.01   SDKA                                                                  06/09/2020 09:27:01 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE SDKA
OBJECT MODULE PLACED IN SDka.OBJ
COMPILER INVOKED BY: D:\keil_v4\C51\BIN\C51.EXE SDka.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "reg51.h"
   2          #define uchar unsigned char
   3          #define uint unsigned int
   4          #define ulong unsigned long
   5          
   6          #define F_OSC  11059200//晶振频率Hz
   7          #define F_BAUD 9600
   8          #define RELOAD 256-F_OSC/12/32/F_BAUD
   9          #define CR 0x0D        //回车
  10          
  11          //定义SD卡需要的4根信号线
  12          sbit SD_CLK = P1^4;
  13          sbit SD_DI  = P1^6;
  14          sbit SD_DO  = P1^5;
  15          sbit SD_CS  = P1^7;
  16          
  17          uchar xdata DATA[512];    //定义512字节缓冲区，注意需要使用 xdata关键字
  18          /*
  19          //延时子函数
  20          void delay_ms(uint x)
  21          {
  22                  int i,j;
  23                  for(i=0;i<x;i++)
  24                  for(j=0;j<260;j++);
  25          }  */
  26          
  27          //写一字节到SD卡,模拟SPI总线方式
  28          void SdWrite(uchar n)
  29          {
  30   1          uchar i;
  31   1          for(i=8;i;i--)
  32   1          {
  33   2              SD_CLK=0;
  34   2              SD_DI=(n&0x80);
  35   2              n<<=1;
  36   2              SD_CLK=1;
  37   2              }
  38   1              SD_DI=1;
  39   1          }
  40          
  41          //从SD卡读一字节,模拟SPI总线方式
  42          uchar SdRead()
  43          {
  44   1          uchar n,i;
  45   1          for(i=8;i;i--)
  46   1          {
  47   2              SD_CLK=0;
  48   2              SD_CLK=1;
  49   2              n<<=1;
  50   2              if(SD_DO) n|=1;
  51   2          }
  52   1          return n;
  53   1      }
  54          
  55          //检测SD卡的响应
C51 COMPILER V9.01   SDKA                                                                  06/09/2020 09:27:01 PAGE 2   

  56          uchar SdResponse()
  57          {
  58   1          uchar i=0,response;
  59   1      
  60   1          while(i<=8)
  61   1          {
  62   2              response = SdRead();
  63   2              if(response==0x00)break;
  64   2              if(response==0x01)break;
  65   2              i++;
  66   2          }
  67   1          return response;
  68   1      }
  69          
  70          //发命令到SD卡
  71          void SdCommand(uchar command,ulong argument, uchar CRC)
  72          {
  73   1      
  74   1          SdWrite(command|0x40);
  75   1          SdWrite(((uchar *)&argument)[0]);
  76   1          SdWrite(((uchar *)&argument)[1]);
  77   1          SdWrite(((uchar *)&argument)[2]);
  78   1          SdWrite(((uchar *)&argument)[3]);
  79   1          SdWrite(CRC);
  80   1      }
  81          
  82          //初始化SD卡
  83          uchar SdInit(void)
  84          {
  85   1          int delay=0, trials=0;
  86   1          uchar i;
  87   1          uchar response=0x01;
  88   1      
  89   1          SD_CS=1;
  90   1          for(i=0;i<=9;i++)
  91   1          SdWrite(0xff);
  92   1          SD_CS=0;
  93   1      
  94   1          //Send Command 0 to put MMC in SPI mode
  95   1          SdCommand(0x00,0,0x95);
  96   1      
  97   1          response=SdResponse();
  98   1          if(response!=0x01)
  99   1          {
 100   2              return 0;
 101   2          }
 102   1      
 103   1          while(response==0x01)
 104   1          {
 105   2              SD_CS=1;
 106   2              SdWrite(0xff);
 107   2              SD_CS=0;
 108   2              SdCommand(0x01,0x00ffc000,0xff);
 109   2              response=SdResponse();
 110   2          }
 111   1      
 112   1          SD_CS=1;
 113   1          SdWrite(0xff);
 114   1          return 1;
 115   1      }
 116          
 117          //往SD卡指定地址写数据,一次最多512字节
C51 COMPILER V9.01   SDKA                                                                  06/09/2020 09:27:01 PAGE 3   

 118          uchar SdWriteBlock(uchar *Block,ulong address,int len)
 119          {
 120   1          uint count;
 121   1          uchar dataResp;
 122   1          //Block size is 512 bytes exactly
 123   1          //First Lower SS
 124   1      
 125   1          SD_CS=0;
 126   1          //Then send write command
 127   1          SdCommand(0x18,address,0xff);
 128   1      
 129   1          if(SdResponse()==00)
 130   1          {
 131   2              SdWrite(0xff);
 132   2              SdWrite(0xff);
 133   2              SdWrite(0xff);
 134   2              //command was a success - now send data
 135   2              //start with DATA TOKEN = 0xFE
 136   2              SdWrite(0xfe);
 137   2              //now send data
 138   2              for(count=0;count<len;count++) SdWrite(*Block++);
 139   2      
 140   2              for(;count<512;count++) SdWrite(0);
 141   2              //data block sent - now send checksum
 142   2              SdWrite(0xff); //两字节CRC校验, 为0XFFFF 表示不考虑CRC
 143   2              SdWrite(0xff);
 144   2              //Now read in the DATA RESPONSE token
 145   2              dataResp=SdRead();
 146   2              //Following the DATA RESPONSE token
 147   2              //are a number of BUSY bytes
 148   2              //a zero byte indicates the MMC is busy
 149   2      
 150   2              while(SdRead()==0);
 151   2      
 152   2              dataResp=dataResp&0x0f; //mask the high byte of the DATA RESPONSE token
 153   2              SD_CS=1;
 154   2              SdWrite(0xff);
 155   2              if(dataResp==0x0b)
 156   2              {
 157   3              //printf("DATA WAS NOT ACCEPTED BY CARD -- CRC ERROR\n");
 158   3              return 0;
 159   3              }
 160   2              if(dataResp==0x05)
 161   2              return 1;
 162   2      
 163   2              //printf("Invalid data Response token.\n");
 164   2              return 0;
 165   2          }
 166   1          //printf("Command 0x18 (Write) was not received by the MMC.\n");
 167   1          return 0;
 168   1      }
 169          
 170          //从SD卡指定地址读取数据,一次最多512字节
 171          uchar SdReadBlock(uchar *Block,ulong address,int len)
 172          {
 173   1          uint count;
 174   1          //Block size is 512 bytes exactly
 175   1          //First Lower SS
 176   1      
 177   1           //printf("MMC_read_block\n");
 178   1      
 179   1          SD_CS=0;
C51 COMPILER V9.01   SDKA                                                                  06/09/2020 09:27:01 PAGE 4   

 180   1          //Then send write command
 181   1          SdCommand(0x11,address,0xff);
 182   1      
 183   1          if(SdResponse()==00)
 184   1          {
 185   2              //command was a success - now send data
 186   2              //start with DATA TOKEN = 0xFE
 187   2              while(SdRead()!=0xfe);
 188   2      
 189   2              for(count=0;count<len;count++) *Block++=SdRead();
 190   2      
 191   2              for(;count<512;count++) SdRead();
 192   2      
 193   2              //data block sent - now send checksum
 194   2              SdRead();
 195   2              SdRead();
 196   2              //Now read in the DATA RESPONSE token
 197   2              SD_CS=1;
 198   2              SdRead();
 199   2              return 1;
 200   2          }
 201   1      //printf("Command 0x11 (Read) was not received by the MMC.\n");
 202   1          return 0;
 203   1      }
 204          
 205          /*******************************************
 206                   串口初始化
 207          *******************************************/
 208          void UART()
 209          {
 210   1          SCON=0x40;//工作与方式1不允许接受
 211   1          TMOD=0x20;//定时器1工作与方式2自动重装模式
 212   1          TH1=RELOAD;
 213   1          TR1=1;
 214   1          TI=0;   
 215   1      }
 216          
 217          //通过串口发送一个字符串
 218          void Sen_String(uchar *string)
 219          {
 220   1          while(*string!='\0')
 221   1          {
 222   2              if(*string=='\n')
 223   2              {
 224   3                  SBUF=CR;
 225   3              }
 226   2              else
 227   2              {
 228   3                  SBUF=*string;
 229   3              }
 230   2              while(TI==0);
 231   2              TI=0;
 232   2              string++;
 233   2          }
 234   1      }
 235          
 236          void main()
 237          {
 238   1          UART();
 239   1          while(!SdInit()); //等待SD卡初始化完成
 240   1          SdWriteBlock("THIS IS A TEST!",0x000000,15);//写入字符串，然后读出进行检验
 241   1          SdReadBlock(DATA,0x000000,15);
C51 COMPILER V9.01   SDKA                                                                  06/09/2020 09:27:01 PAGE 5   

 242   1          Sen_String(DATA);        //发出数据
 243   1          while(1)
 244   1         {
 245   2         }
 246   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    581    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =    512    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      28
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
