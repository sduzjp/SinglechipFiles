//程序功能：将两位BCD码转换为对应的十进制数
ORG 0000H  //汇编起始指令
AJMP MAIN  //跳转到标号MAIN处执行
ORG 0030H  //MAIN处程序起始位置

MAIN:
	MOV 30H,#45H  //将立即数45H存入内存单元30H中，保存该立即数
	MOV A,30H	//将内存单元30H中的数存到累加器A中
	ANL A,#0FH	//将立即数的高四位置0，取得数的低四位
	MOV 31H,A	//将低四位存到内存单元31H中
	MOV A,30H	//重新获取立即数
	ANL A,#0F0H	//将立即数的低四位置0
	SWAP A	//进行自交换，取得立即数的高四位
	MOV B,#10  //将立即数10存入寄存器B中
	MUL AB	 //将A中数乘10
	ADD A,31H  //将立即数45H的高四位乘10结果加上低四位
	MOV 31H,A  //将所得结果存入内存单元31H中
	SJMP $	//原地踏步，等待中断信号的到来
END	 //汇编结束伪指令
